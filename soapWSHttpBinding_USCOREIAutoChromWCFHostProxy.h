/* soapWSHttpBinding_USCOREIAutoChromWCFHostProxy.h
   Generated by gSOAP 2.8.75 for liga.h

gSOAP XML Web services tools
Copyright (C) 2000-2018, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#ifndef soapWSHttpBinding_USCOREIAutoChromWCFHostProxy_H
#define soapWSHttpBinding_USCOREIAutoChromWCFHostProxy_H
#include "soapH.h"

    class SOAP_CMAC WSHttpBinding_USCOREIAutoChromWCFHostProxy {
      public:
        /// Context to manage proxy IO and data
        struct soap *soap;
        /// flag indicating that this context is owned by this proxy and should be deleted by the destructor
        bool soap_own;
        /// Endpoint URL of service 'WSHttpBinding_USCOREIAutoChromWCFHostProxy' (change as needed)
        const char *soap_endpoint;
        /// Variables globally declared in liga.h, if any
        /// Construct a proxy with new managing context
        WSHttpBinding_USCOREIAutoChromWCFHostProxy();
        /// Copy constructor
        WSHttpBinding_USCOREIAutoChromWCFHostProxy(const WSHttpBinding_USCOREIAutoChromWCFHostProxy& rhs);
        /// Construct proxy given a shared managing context
        WSHttpBinding_USCOREIAutoChromWCFHostProxy(struct soap*);
        /// Construct proxy given a shared managing context and endpoint URL
        WSHttpBinding_USCOREIAutoChromWCFHostProxy(struct soap*, const char *soap_endpoint_url);
        /// Constructor taking an endpoint URL
        WSHttpBinding_USCOREIAutoChromWCFHostProxy(const char *soap_endpoint_url);
        /// Constructor taking input and output mode flags for the new managing context
        WSHttpBinding_USCOREIAutoChromWCFHostProxy(soap_mode iomode);
        /// Constructor taking endpoint URL and input and output mode flags for the new managing context
        WSHttpBinding_USCOREIAutoChromWCFHostProxy(const char *soap_endpoint_url, soap_mode iomode);
        /// Constructor taking input and output mode flags for the new managing context
        WSHttpBinding_USCOREIAutoChromWCFHostProxy(soap_mode imode, soap_mode omode);
        /// Destructor deletes deserialized data and its managing context, when the context was allocated by the contructor
        virtual ~WSHttpBinding_USCOREIAutoChromWCFHostProxy();
        /// Initializer used by constructors
        virtual void WSHttpBinding_USCOREIAutoChromWCFHostProxy_init(soap_mode imode, soap_mode omode);
        /// Return a copy that has a new managing context with the same engine state
        virtual WSHttpBinding_USCOREIAutoChromWCFHostProxy *copy();
        /// Copy assignment
        WSHttpBinding_USCOREIAutoChromWCFHostProxy& operator=(const WSHttpBinding_USCOREIAutoChromWCFHostProxy&);
        /// Delete all deserialized data (uses soap_destroy() and soap_end())
        virtual void destroy();
        /// Delete all deserialized data and reset to default
        virtual void reset();
        /// Disables and removes SOAP Header from message by setting soap->header = NULL
        virtual void soap_noheader();
        /// Add SOAP Header to message
        virtual void soap_header(char *wsa5__MessageID, struct wsa5__RelatesToType *wsa5__RelatesTo, struct wsa5__EndpointReferenceType *wsa5__From, struct wsa5__EndpointReferenceType *wsa5__ReplyTo, struct wsa5__EndpointReferenceType *wsa5__FaultTo, char *wsa5__To, char *wsa5__Action, struct chan__ChannelInstanceType *chan__ChannelInstance);
        /// Get SOAP Header structure (i.e. soap->header, which is NULL when absent)
        virtual ::SOAP_ENV__Header *soap_header();
        /// Get SOAP Fault structure (i.e. soap->fault, which is NULL when absent)
        virtual ::SOAP_ENV__Fault *soap_fault();
        /// Get SOAP Fault subcode QName string (NULL when absent)
        virtual const char *soap_fault_subcode();
        /// Get SOAP Fault string/reason (NULL when absent)
        virtual const char *soap_fault_string();
        /// Get SOAP Fault detail XML string (NULL when absent)
        virtual const char *soap_fault_detail();
        /// Close connection (normally automatic, except for send_X ops)
        virtual int soap_close_socket();
        /// Force close connection (can kill a thread blocked on IO)
        virtual int soap_force_close_socket();
        /// Print fault
        virtual void soap_print_fault(FILE*);
    #ifndef WITH_LEAN
    #ifndef WITH_COMPAT
        /// Print fault to stream
        virtual void soap_stream_fault(std::ostream&);
    #endif
        /// Write fault to buffer
        virtual char *soap_sprint_fault(char *buf, size_t len);
    #endif
        //
        /// Web service synchronous operation 'StartAutoPlan' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int StartAutoPlan(_ns2__StartAutoPlan *ns2__StartAutoPlan, _ns2__StartAutoPlanResponse &ns2__StartAutoPlanResponse) { return this->StartAutoPlan(NULL, NULL, ns2__StartAutoPlan, ns2__StartAutoPlanResponse); }
        /// Web service synchronous operation 'StartAutoPlan' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int StartAutoPlan(const char *soap_endpoint_url, const char *soap_action, _ns2__StartAutoPlan *ns2__StartAutoPlan, _ns2__StartAutoPlanResponse &ns2__StartAutoPlanResponse) { return this->send_StartAutoPlan(soap_endpoint_url, soap_action, ns2__StartAutoPlan) || this->recv_StartAutoPlan(ns2__StartAutoPlanResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_StartAutoPlan' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_StartAutoPlan(const char *soap_endpoint_url, const char *soap_action, _ns2__StartAutoPlan *ns2__StartAutoPlan);
        /// Web service asynchronous operation 'recv_StartAutoPlan' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_StartAutoPlan(_ns2__StartAutoPlanResponse &ns2__StartAutoPlanResponse);
        //
        /// Web service synchronous operation 'StartOperation' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int StartOperation(_ns2__StartOperation *ns2__StartOperation, _ns2__StartOperationResponse &ns2__StartOperationResponse) { return this->StartOperation(NULL, NULL, ns2__StartOperation, ns2__StartOperationResponse); }
        /// Web service synchronous operation 'StartOperation' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int StartOperation(const char *soap_endpoint_url, const char *soap_action, _ns2__StartOperation *ns2__StartOperation, _ns2__StartOperationResponse &ns2__StartOperationResponse) { return this->send_StartOperation(soap_endpoint_url, soap_action, ns2__StartOperation) || this->recv_StartOperation(ns2__StartOperationResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_StartOperation' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_StartOperation(const char *soap_endpoint_url, const char *soap_action, _ns2__StartOperation *ns2__StartOperation);
        /// Web service asynchronous operation 'recv_StartOperation' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_StartOperation(_ns2__StartOperationResponse &ns2__StartOperationResponse);
        //
        /// Web service synchronous operation 'StopAnalyzing' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int StopAnalyzing(_ns2__StopAnalyzing *ns2__StopAnalyzing, _ns2__StopAnalyzingResponse &ns2__StopAnalyzingResponse) { return this->StopAnalyzing(NULL, NULL, ns2__StopAnalyzing, ns2__StopAnalyzingResponse); }
        /// Web service synchronous operation 'StopAnalyzing' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int StopAnalyzing(const char *soap_endpoint_url, const char *soap_action, _ns2__StopAnalyzing *ns2__StopAnalyzing, _ns2__StopAnalyzingResponse &ns2__StopAnalyzingResponse) { return this->send_StopAnalyzing(soap_endpoint_url, soap_action, ns2__StopAnalyzing) || this->recv_StopAnalyzing(ns2__StopAnalyzingResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_StopAnalyzing' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_StopAnalyzing(const char *soap_endpoint_url, const char *soap_action, _ns2__StopAnalyzing *ns2__StopAnalyzing);
        /// Web service asynchronous operation 'recv_StopAnalyzing' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_StopAnalyzing(_ns2__StopAnalyzingResponse &ns2__StopAnalyzingResponse);
        //
        /// Web service synchronous operation 'AbortAnalyzing' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int AbortAnalyzing(_ns2__AbortAnalyzing *ns2__AbortAnalyzing, _ns2__AbortAnalyzingResponse &ns2__AbortAnalyzingResponse) { return this->AbortAnalyzing(NULL, NULL, ns2__AbortAnalyzing, ns2__AbortAnalyzingResponse); }
        /// Web service synchronous operation 'AbortAnalyzing' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int AbortAnalyzing(const char *soap_endpoint_url, const char *soap_action, _ns2__AbortAnalyzing *ns2__AbortAnalyzing, _ns2__AbortAnalyzingResponse &ns2__AbortAnalyzingResponse) { return this->send_AbortAnalyzing(soap_endpoint_url, soap_action, ns2__AbortAnalyzing) || this->recv_AbortAnalyzing(ns2__AbortAnalyzingResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_AbortAnalyzing' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_AbortAnalyzing(const char *soap_endpoint_url, const char *soap_action, _ns2__AbortAnalyzing *ns2__AbortAnalyzing);
        /// Web service asynchronous operation 'recv_AbortAnalyzing' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_AbortAnalyzing(_ns2__AbortAnalyzingResponse &ns2__AbortAnalyzingResponse);
        //
        /// Web service synchronous operation 'GetProcessingInfo' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int GetProcessingInfo(_ns2__GetProcessingInfo *ns2__GetProcessingInfo, _ns2__GetProcessingInfoResponse &ns2__GetProcessingInfoResponse) { return this->GetProcessingInfo(NULL, NULL, ns2__GetProcessingInfo, ns2__GetProcessingInfoResponse); }
        /// Web service synchronous operation 'GetProcessingInfo' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int GetProcessingInfo(const char *soap_endpoint_url, const char *soap_action, _ns2__GetProcessingInfo *ns2__GetProcessingInfo, _ns2__GetProcessingInfoResponse &ns2__GetProcessingInfoResponse) { return this->send_GetProcessingInfo(soap_endpoint_url, soap_action, ns2__GetProcessingInfo) || this->recv_GetProcessingInfo(ns2__GetProcessingInfoResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_GetProcessingInfo' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_GetProcessingInfo(const char *soap_endpoint_url, const char *soap_action, _ns2__GetProcessingInfo *ns2__GetProcessingInfo);
        /// Web service asynchronous operation 'recv_GetProcessingInfo' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_GetProcessingInfo(_ns2__GetProcessingInfoResponse &ns2__GetProcessingInfoResponse);
        //
        /// Web service synchronous operation 'SetIgnoreClearing' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int SetIgnoreClearing(_ns2__SetIgnoreClearing *ns2__SetIgnoreClearing, _ns2__SetIgnoreClearingResponse &ns2__SetIgnoreClearingResponse) { return this->SetIgnoreClearing(NULL, NULL, ns2__SetIgnoreClearing, ns2__SetIgnoreClearingResponse); }
        /// Web service synchronous operation 'SetIgnoreClearing' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int SetIgnoreClearing(const char *soap_endpoint_url, const char *soap_action, _ns2__SetIgnoreClearing *ns2__SetIgnoreClearing, _ns2__SetIgnoreClearingResponse &ns2__SetIgnoreClearingResponse) { return this->send_SetIgnoreClearing(soap_endpoint_url, soap_action, ns2__SetIgnoreClearing) || this->recv_SetIgnoreClearing(ns2__SetIgnoreClearingResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_SetIgnoreClearing' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_SetIgnoreClearing(const char *soap_endpoint_url, const char *soap_action, _ns2__SetIgnoreClearing *ns2__SetIgnoreClearing);
        /// Web service asynchronous operation 'recv_SetIgnoreClearing' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_SetIgnoreClearing(_ns2__SetIgnoreClearingResponse &ns2__SetIgnoreClearingResponse);
        //
        /// Web service synchronous operation 'GetSystemConfigurations' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int GetSystemConfigurations(_ns2__GetSystemConfigurations *ns2__GetSystemConfigurations, _ns2__GetSystemConfigurationsResponse &ns2__GetSystemConfigurationsResponse) { return this->GetSystemConfigurations(NULL, NULL, ns2__GetSystemConfigurations, ns2__GetSystemConfigurationsResponse); }
        /// Web service synchronous operation 'GetSystemConfigurations' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int GetSystemConfigurations(const char *soap_endpoint_url, const char *soap_action, _ns2__GetSystemConfigurations *ns2__GetSystemConfigurations, _ns2__GetSystemConfigurationsResponse &ns2__GetSystemConfigurationsResponse) { return this->send_GetSystemConfigurations(soap_endpoint_url, soap_action, ns2__GetSystemConfigurations) || this->recv_GetSystemConfigurations(ns2__GetSystemConfigurationsResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_GetSystemConfigurations' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_GetSystemConfigurations(const char *soap_endpoint_url, const char *soap_action, _ns2__GetSystemConfigurations *ns2__GetSystemConfigurations);
        /// Web service asynchronous operation 'recv_GetSystemConfigurations' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_GetSystemConfigurations(_ns2__GetSystemConfigurationsResponse &ns2__GetSystemConfigurationsResponse);
        //
        /// Web service synchronous operation 'SetSystemConfigurations' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int SetSystemConfigurations(_ns2__SetSystemConfigurations *ns2__SetSystemConfigurations, _ns2__SetSystemConfigurationsResponse &ns2__SetSystemConfigurationsResponse) { return this->SetSystemConfigurations(NULL, NULL, ns2__SetSystemConfigurations, ns2__SetSystemConfigurationsResponse); }
        /// Web service synchronous operation 'SetSystemConfigurations' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int SetSystemConfigurations(const char *soap_endpoint_url, const char *soap_action, _ns2__SetSystemConfigurations *ns2__SetSystemConfigurations, _ns2__SetSystemConfigurationsResponse &ns2__SetSystemConfigurationsResponse) { return this->send_SetSystemConfigurations(soap_endpoint_url, soap_action, ns2__SetSystemConfigurations) || this->recv_SetSystemConfigurations(ns2__SetSystemConfigurationsResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_SetSystemConfigurations' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_SetSystemConfigurations(const char *soap_endpoint_url, const char *soap_action, _ns2__SetSystemConfigurations *ns2__SetSystemConfigurations);
        /// Web service asynchronous operation 'recv_SetSystemConfigurations' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_SetSystemConfigurations(_ns2__SetSystemConfigurationsResponse &ns2__SetSystemConfigurationsResponse);
        //
        /// Web service synchronous operation 'GetResults' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int GetResults(_ns2__GetResults *ns2__GetResults, _ns2__GetResultsResponse &ns2__GetResultsResponse) { return this->GetResults(NULL, NULL, ns2__GetResults, ns2__GetResultsResponse); }
        /// Web service synchronous operation 'GetResults' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int GetResults(const char *soap_endpoint_url, const char *soap_action, _ns2__GetResults *ns2__GetResults, _ns2__GetResultsResponse &ns2__GetResultsResponse) { return this->send_GetResults(soap_endpoint_url, soap_action, ns2__GetResults) || this->recv_GetResults(ns2__GetResultsResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_GetResults' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_GetResults(const char *soap_endpoint_url, const char *soap_action, _ns2__GetResults *ns2__GetResults);
        /// Web service asynchronous operation 'recv_GetResults' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_GetResults(_ns2__GetResultsResponse &ns2__GetResultsResponse);
        //
        /// Web service synchronous operation 'GetLastResult' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int GetLastResult(_ns2__GetLastResult *ns2__GetLastResult, _ns2__GetLastResultResponse &ns2__GetLastResultResponse) { return this->GetLastResult(NULL, NULL, ns2__GetLastResult, ns2__GetLastResultResponse); }
        /// Web service synchronous operation 'GetLastResult' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int GetLastResult(const char *soap_endpoint_url, const char *soap_action, _ns2__GetLastResult *ns2__GetLastResult, _ns2__GetLastResultResponse &ns2__GetLastResultResponse) { return this->send_GetLastResult(soap_endpoint_url, soap_action, ns2__GetLastResult) || this->recv_GetLastResult(ns2__GetLastResultResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_GetLastResult' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_GetLastResult(const char *soap_endpoint_url, const char *soap_action, _ns2__GetLastResult *ns2__GetLastResult);
        /// Web service asynchronous operation 'recv_GetLastResult' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_GetLastResult(_ns2__GetLastResultResponse &ns2__GetLastResultResponse);
        //
        /// Web service synchronous operation 'GetLastResultId' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int GetLastResultId(_ns2__GetLastResultId *ns2__GetLastResultId, _ns2__GetLastResultIdResponse &ns2__GetLastResultIdResponse) { return this->GetLastResultId(NULL, NULL, ns2__GetLastResultId, ns2__GetLastResultIdResponse); }
        /// Web service synchronous operation 'GetLastResultId' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int GetLastResultId(const char *soap_endpoint_url, const char *soap_action, _ns2__GetLastResultId *ns2__GetLastResultId, _ns2__GetLastResultIdResponse &ns2__GetLastResultIdResponse) { return this->send_GetLastResultId(soap_endpoint_url, soap_action, ns2__GetLastResultId) || this->recv_GetLastResultId(ns2__GetLastResultIdResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_GetLastResultId' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_GetLastResultId(const char *soap_endpoint_url, const char *soap_action, _ns2__GetLastResultId *ns2__GetLastResultId);
        /// Web service asynchronous operation 'recv_GetLastResultId' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_GetLastResultId(_ns2__GetLastResultIdResponse &ns2__GetLastResultIdResponse);
        //
        /// Web service synchronous operation 'GetResultsSinceId' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int GetResultsSinceId(_ns2__GetResultsSinceId *ns2__GetResultsSinceId, _ns2__GetResultsSinceIdResponse &ns2__GetResultsSinceIdResponse) { return this->GetResultsSinceId(NULL, NULL, ns2__GetResultsSinceId, ns2__GetResultsSinceIdResponse); }
        /// Web service synchronous operation 'GetResultsSinceId' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int GetResultsSinceId(const char *soap_endpoint_url, const char *soap_action, _ns2__GetResultsSinceId *ns2__GetResultsSinceId, _ns2__GetResultsSinceIdResponse &ns2__GetResultsSinceIdResponse) { return this->send_GetResultsSinceId(soap_endpoint_url, soap_action, ns2__GetResultsSinceId) || this->recv_GetResultsSinceId(ns2__GetResultsSinceIdResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_GetResultsSinceId' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_GetResultsSinceId(const char *soap_endpoint_url, const char *soap_action, _ns2__GetResultsSinceId *ns2__GetResultsSinceId);
        /// Web service asynchronous operation 'recv_GetResultsSinceId' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_GetResultsSinceId(_ns2__GetResultsSinceIdResponse &ns2__GetResultsSinceIdResponse);
        //
        /// Web service synchronous operation 'GetEvents' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int GetEvents(_ns2__GetEvents *ns2__GetEvents, _ns2__GetEventsResponse &ns2__GetEventsResponse) { return this->GetEvents(NULL, NULL, ns2__GetEvents, ns2__GetEventsResponse); }
        /// Web service synchronous operation 'GetEvents' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int GetEvents(const char *soap_endpoint_url, const char *soap_action, _ns2__GetEvents *ns2__GetEvents, _ns2__GetEventsResponse &ns2__GetEventsResponse) { return this->send_GetEvents(soap_endpoint_url, soap_action, ns2__GetEvents) || this->recv_GetEvents(ns2__GetEventsResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_GetEvents' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_GetEvents(const char *soap_endpoint_url, const char *soap_action, _ns2__GetEvents *ns2__GetEvents);
        /// Web service asynchronous operation 'recv_GetEvents' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_GetEvents(_ns2__GetEventsResponse &ns2__GetEventsResponse);
        //
        /// Web service synchronous operation 'GetLastEventId' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int GetLastEventId(_ns2__GetLastEventId *ns2__GetLastEventId, _ns2__GetLastEventIdResponse &ns2__GetLastEventIdResponse) { return this->GetLastEventId(NULL, NULL, ns2__GetLastEventId, ns2__GetLastEventIdResponse); }
        /// Web service synchronous operation 'GetLastEventId' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int GetLastEventId(const char *soap_endpoint_url, const char *soap_action, _ns2__GetLastEventId *ns2__GetLastEventId, _ns2__GetLastEventIdResponse &ns2__GetLastEventIdResponse) { return this->send_GetLastEventId(soap_endpoint_url, soap_action, ns2__GetLastEventId) || this->recv_GetLastEventId(ns2__GetLastEventIdResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_GetLastEventId' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_GetLastEventId(const char *soap_endpoint_url, const char *soap_action, _ns2__GetLastEventId *ns2__GetLastEventId);
        /// Web service asynchronous operation 'recv_GetLastEventId' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_GetLastEventId(_ns2__GetLastEventIdResponse &ns2__GetLastEventIdResponse);
        //
        /// Web service synchronous operation 'GetEventsSinceId' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int GetEventsSinceId(_ns2__GetEventsSinceId *ns2__GetEventsSinceId, _ns2__GetEventsSinceIdResponse &ns2__GetEventsSinceIdResponse) { return this->GetEventsSinceId(NULL, NULL, ns2__GetEventsSinceId, ns2__GetEventsSinceIdResponse); }
        /// Web service synchronous operation 'GetEventsSinceId' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int GetEventsSinceId(const char *soap_endpoint_url, const char *soap_action, _ns2__GetEventsSinceId *ns2__GetEventsSinceId, _ns2__GetEventsSinceIdResponse &ns2__GetEventsSinceIdResponse) { return this->send_GetEventsSinceId(soap_endpoint_url, soap_action, ns2__GetEventsSinceId) || this->recv_GetEventsSinceId(ns2__GetEventsSinceIdResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_GetEventsSinceId' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_GetEventsSinceId(const char *soap_endpoint_url, const char *soap_action, _ns2__GetEventsSinceId *ns2__GetEventsSinceId);
        /// Web service asynchronous operation 'recv_GetEventsSinceId' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_GetEventsSinceId(_ns2__GetEventsSinceIdResponse &ns2__GetEventsSinceIdResponse);
    };
#endif
